(function() {
  var uploadForm = document.forms['upload-select-image'];
  var resizeForm = document.forms['upload-resize'];
  var filterForm = document.forms['upload-filter'];

  var previewImage = filterForm.querySelector('.filter-image-preview');
  var prevButton = filterForm['filter-prev'];
  var selectedFilter = filterForm['upload-filter'];

  var filterMap;

  function setFilter() {
    if (!filterMap) {
      filterMap = {
        'none': 'filter-none',
        'chrome': 'filter-chrome',
        'sepia': 'filter-sepia'
      };
    }

    previewImage.className = 'filter-image-preview' + ' ' + filterMap[selectedFilter.value];
  };

  for (var i = 0, l = selectedFilter.length; i < l; i++) {
    selectedFilter[i].onchange = function(evt) {
      setFilter();
    }
  }

  prevButton.onclick = function(evt) {
    evt.preventDefault();

    filterForm.reset();
    filterForm.classList.add('invisible');
    resizeForm.classList.remove('invisible');
  };

  filterForm.onsubmit = function() {
    evt.preventDefault();

    uploadForm.classList.remove('invisible');
    filterForm.classList.add('invisible');
  }

  setFilter();
})();

(function() {
  var images = [
    'img/logo-background-1.jpg',
    'img/logo-background-2.jpg',
    'img/logo-background-3.jpg'
  ];

  var backgroundElement = document.querySelector('.upload');
  var randomImageNumber = Math.round(Math.random() * (images.length - 1));
  backgroundElement.style.backgroundImage = 'url(' + images[randomImageNumber] + ')';
})();

(function() {
  var uploadForm = document.forms['upload-select-image'];
  var resizeForm = document.forms['upload-resize'];
  var filterForm = document.forms['upload-filter'];

  var previewImage = resizeForm.querySelector('.resize-image-preview'),
      prevButton = resizeForm['resize-prev'],
      resizeFieldX = resizeForm['resize-x'],
      resizeFieldY = resizeForm['resize-y'],
      resizeFieldSize = resizeForm['resize-size'],
      isImageloaded = false,
      imgW = 0,
      imgH = 0,
      maxSize = 0,
      offsetX = resizeFieldX.value || 0,
      offsetY = resizeFieldY.value || 0;



  previewImage.onload = function(ev) {
    console.log('load');
    isImageloaded = true;
    imgW = this.offsetWidth;
    imgH = this.offsetHeight;
    maxSize = Math.min(imgW, imgH);

    resizeFieldX.min = 0;
    resizeFieldY.min = 0;
    resizeFieldSize.min = 0;
    resizeFieldX.max = imgW;
    resizeFieldY.max = imgH;
    resizeFieldSize.max = maxSize;
  }


  resizeFieldSize.onchange = function(ev) {
    var val = parseInt(this.value);
    this.max = maxSize;
    if (isNaN(val) || val < 0) {
      val = 0;
    } else {
      val = Math.min(val, maxSize);
    }
    this.value = val;

    resizeFieldX.max = (maxSize - val);
    resizeFieldY.max = (maxSize - val);
  }

  resizeFieldX.onchange = function(ev) {
    var val = parseInt(this.value);
    this.max = maxSize - 1;
    if (isNaN(val) || val < 0) {
      val = 0;
    } else {
      val = Math.min(val, maxSize - 1);
    }
    offsetX = val;
    resizeFieldSize.max = Math.min(maxSize - offsetY, maxSize - offsetX);
    this.value = val;
  }

  resizeFieldY.onchange = function(ev) {
    var val = parseInt(this.value);
    this.max = maxSize - 1;
    if (isNaN(val) || val < 0) {
      val = 0;
    } else {
      val = Math.min(val, maxSize - 1);
    }
    offsetY = val;
    resizeFieldSize.max = Math.min(maxSize - offsetY, maxSize - offsetX);
    this.value = val;
  }





  prevButton.onclick = function(evt) {
    evt.preventDefault();

    resizeForm.reset();
    uploadForm.reset();
    isImageloaded = false;
    resizeForm.classList.add('invisible');
    uploadForm.classList.remove('invisible');
  };

  resizeForm.onsubmit = function(evt) {
    evt.preventDefault();

    if (!isImageloaded || !maxSize) {
      alert('Изображение недоступно');
      return;
    }

    if (!resizeFieldSize.value) {
      alert('Сначала выберите кадрирование');
      return;
    }

    filterForm.elements['filter-image-src'] = previewImage.src;

    resizeForm.classList.add('invisible');
    filterForm.classList.remove('invisible');
  };
})();

(function() {
  var uploadForm = document.forms['upload-select-image'];
  var resizeForm = document.forms['upload-resize'];
  var filterForm = document.forms['upload-filter'];

  var fileElement = uploadForm['upload-file'];

  function uploadImage(element, callback) {
    var fileReader = new FileReader();
    fileReader.onload = function(evt) {
      var image = evt.target.result;
      callback(image);
    }

    fileReader.readAsDataURL(element.files[0]);
  }

  fileElement.onchange = function(evt) {
    if (fileElement.value) {
      fileElement.classList.add('upload-input-hasvalue');
    }
  };

  uploadForm.onsubmit = function(evt) {
    evt.preventDefault();

    uploadImage(fileElement, function(image) {
      sessionStorage.setItem('uploaded-image', image);
      resizeForm.querySelector('.resize-image-preview').src = image;
      filterForm.querySelector('.filter-image-preview').src = image;

      uploadForm.classList.add('invisible');
      resizeForm.classList.remove('invisible');
    });
  };

  uploadForm.onreset = function() {
    fileElement.classList.remove('upload-input-hasvalue');
  };
})();

document.addEventListener("DOMContentLoaded", function(){
  // console.log('hey!');
});
